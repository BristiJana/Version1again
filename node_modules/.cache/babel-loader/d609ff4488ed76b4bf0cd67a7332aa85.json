{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\chart-demo\\\\src\\\\Stream.jsx\";\n// Example in https://nagix.github.io/chartjs-plugin-streaming/master/tutorials/react/stream.html\n// is not correct!  Use Chart from chart.js instead.\nimport React from \"react\";\nimport { Chart } from \"chart.js\";\nimport StreamingPlugin from \"chartjs-plugin-streaming\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-adapter-luxon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(StreamingPlugin);\nexport default function Stream() {\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      datasets: [{\n        label: \"Dataset 1\",\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        borderDash: [8, 4],\n        fill: true,\n        data: []\n      }, {\n        label: \"Dataset 2\",\n        backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n        borderColor: \"rgb(54, 162, 235)\",\n        cubicInterpolationMode: \"monotone\",\n        fill: true,\n        data: []\n      }]\n    },\n    options: {\n      scales: {\n        x: {\n          type: \"realtime\",\n          realtime: {\n            delay: 2000,\n            onRefresh: function onRefresh(chart) {\n              chart.data.datasets.forEach(function (dataset) {\n                dataset.data.push({\n                  x: Date.now(),\n                  y: Math.random()\n                });\n              });\n            }\n          }\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = Stream;\nvar _c;\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["React","Chart","StreamingPlugin","Line","jsxDEV","_jsxDEV","register","Stream","data","datasets","label","backgroundColor","borderColor","borderDash","fill","cubicInterpolationMode","options","scales","x","type","realtime","delay","onRefresh","chart","forEach","dataset","push","Date","now","y","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/chart-demo/src/Stream.jsx"],"sourcesContent":["// Example in https://nagix.github.io/chartjs-plugin-streaming/master/tutorials/react/stream.html\r\n// is not correct!  Use Chart from chart.js instead.\r\nimport React from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport StreamingPlugin from \"chartjs-plugin-streaming\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chartjs-adapter-luxon\";\r\n\r\nChart.register(StreamingPlugin);\r\n\r\nexport default function Stream() {\r\n  return (\r\n    <Line\r\n      data={{\r\n        datasets: [\r\n          {\r\n            label: \"Dataset 1\",\r\n            backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n            borderColor: \"rgb(255, 99, 132)\",\r\n            borderDash: [8, 4],\r\n            fill: true,\r\n            data: []\r\n          },\r\n          {\r\n            label: \"Dataset 2\",\r\n            backgroundColor: \"rgba(54, 162, 235, 0.5)\",\r\n            borderColor: \"rgb(54, 162, 235)\",\r\n            cubicInterpolationMode: \"monotone\",\r\n            fill: true,\r\n            data: []\r\n          }\r\n        ]\r\n      }}\r\n      options={{\r\n        scales: {\r\n          x: {\r\n            type: \"realtime\",\r\n            realtime: {\r\n              delay: 2000,\r\n              onRefresh: (chart) => {\r\n                chart.data.datasets.forEach((dataset) => {\r\n                  dataset.data.push({\r\n                    x: Date.now(),\r\n                    y: Math.random()\r\n                  });\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/BJ,KAAK,CAACK,QAAQ,CAACJ,eAAe,CAAC;AAE/B,eAAe,SAASK,MAAMA,CAAA,EAAG;EAC/B,oBACEF,OAAA,CAACF,IAAI;IACHK,IAAI,EAAE;MACJC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,WAAW;QAClBC,eAAe,EAAE,yBAAyB;QAC1CC,WAAW,EAAE,mBAAmB;QAChCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAClBC,IAAI,EAAE,IAAI;QACVN,IAAI,EAAE;MACR,CAAC,EACD;QACEE,KAAK,EAAE,WAAW;QAClBC,eAAe,EAAE,yBAAyB;QAC1CC,WAAW,EAAE,mBAAmB;QAChCG,sBAAsB,EAAE,UAAU;QAClCD,IAAI,EAAE,IAAI;QACVN,IAAI,EAAE;MACR,CAAC;IAEL,CAAE;IACFQ,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE,UAAU;UAChBC,QAAQ,EAAE;YACRC,KAAK,EAAE,IAAI;YACXC,SAAS,EAAE,SAAAA,UAACC,KAAK,EAAK;cACpBA,KAAK,CAACf,IAAI,CAACC,QAAQ,CAACe,OAAO,CAAC,UAACC,OAAO,EAAK;gBACvCA,OAAO,CAACjB,IAAI,CAACkB,IAAI,CAAC;kBAChBR,CAAC,EAAES,IAAI,CAACC,GAAG,EAAE;kBACbC,CAAC,EAAEC,IAAI,CAACC,MAAM;gBAChB,CAAC,CAAC;cACJ,CAAC,CAAC;YACJ;UACF;QACF;MACF;IACF;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEN;AAACC,EAAA,GA3CuB7B,MAAM;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}