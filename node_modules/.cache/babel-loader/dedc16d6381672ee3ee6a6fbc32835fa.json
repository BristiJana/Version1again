{"ast":null,"code":"import _classCallCheck from \"C:/Users/hp/Downloads/chart-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/hp/Downloads/chart-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/hp/Downloads/chart-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/hp/Downloads/chart-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/hp/Downloads/chart-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/hp/Downloads/chart-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * chartjs-plugin-streaming v2.0.0\n * https://nagix.github.io/chartjs-plugin-streaming\n * (c) 2017-2021 Akihiko Kusanagi\n * Released under the MIT license\n */\nimport { registry, TimeScale, defaults, DatasetController, Chart } from 'chart.js';\nimport { valueOrDefault, each, requestAnimFrame, callback, noop, isFinite, clipArea, unclipArea, isNumber, _lookup, isArray, getRelativePosition } from 'chart.js/helpers';\nfunction clamp(value, lower, upper) {\n  return Math.min(Math.max(value, lower), upper);\n}\nfunction resolveOption(scale, key) {\n  var realtimeOpts = scale.options.realtime;\n  var streamingOpts = scale.chart.options.plugins.streaming;\n  return valueOrDefault(realtimeOpts[key], streamingOpts[key]);\n}\nfunction getAxisMap(element, _ref, _ref2) {\n  var x = _ref.x,\n    y = _ref.y;\n  var xAxisID = _ref2.xAxisID,\n    yAxisID = _ref2.yAxisID;\n  var axisMap = {};\n  each(x, function (key) {\n    axisMap[key] = {\n      axisId: xAxisID\n    };\n  });\n  each(y, function (key) {\n    axisMap[key] = {\n      axisId: yAxisID\n    };\n  });\n  return axisMap;\n}\nvar cancelAnimFrame = function () {\n  if (typeof window === 'undefined') {\n    return noop;\n  }\n  return window.cancelAnimationFrame;\n}();\nfunction startFrameRefreshTimer(context, func) {\n  if (!context.frameRequestID) {\n    var refresh = function refresh() {\n      var nextRefresh = context.nextRefresh || 0;\n      var now = Date.now();\n      if (nextRefresh <= now) {\n        var newFrameRate = callback(func);\n        var frameDuration = 1000 / (Math.max(newFrameRate, 0) || 30);\n        var newNextRefresh = context.nextRefresh + frameDuration || 0;\n        context.nextRefresh = newNextRefresh > now ? newNextRefresh : now + frameDuration;\n      }\n      context.frameRequestID = requestAnimFrame.call(window, refresh);\n    };\n    context.frameRequestID = requestAnimFrame.call(window, refresh);\n  }\n}\nfunction stopFrameRefreshTimer(context) {\n  var frameRequestID = context.frameRequestID;\n  if (frameRequestID) {\n    cancelAnimFrame.call(window, frameRequestID);\n    delete context.frameRequestID;\n  }\n}\nfunction stopDataRefreshTimer(context) {\n  var refreshTimerID = context.refreshTimerID;\n  if (refreshTimerID) {\n    clearInterval(refreshTimerID);\n    delete context.refreshTimerID;\n    delete context.refreshInterval;\n  }\n}\nfunction startDataRefreshTimer(context, func, interval) {\n  if (!context.refreshTimerID) {\n    context.refreshTimerID = setInterval(function () {\n      var newInterval = callback(func);\n      if (context.refreshInterval !== newInterval && !isNaN(newInterval)) {\n        stopDataRefreshTimer(context);\n        startDataRefreshTimer(context, func, newInterval);\n      }\n    }, interval || 0);\n    context.refreshInterval = interval || 0;\n  }\n}\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? {\n    value: scale.getPixelForValue(value),\n    transitionable: true\n  } : {\n    value: fallback\n  };\n}\nfunction updateBoxAnnotation(element, chart, options) {\n  var scales = chart.scales,\n    chartArea = chart.chartArea;\n  var xScaleID = options.xScaleID,\n    yScaleID = options.yScaleID,\n    xMin = options.xMin,\n    xMax = options.xMax,\n    yMin = options.yMin,\n    yMax = options.yMax;\n  var xScale = scales[xScaleID];\n  var yScale = scales[yScaleID];\n  var top = chartArea.top,\n    left = chartArea.left,\n    bottom = chartArea.bottom,\n    right = chartArea.right;\n  var streaming = element.$streaming = {};\n  if (xScale) {\n    var min = scaleValue(xScale, xMin, left);\n    var max = scaleValue(xScale, xMax, right);\n    var reverse = min.value > max.value;\n    if (min.transitionable) {\n      streaming[reverse ? 'x2' : 'x'] = {\n        axisId: xScaleID\n      };\n    }\n    if (max.transitionable) {\n      streaming[reverse ? 'x' : 'x2'] = {\n        axisId: xScaleID\n      };\n    }\n    if (min.transitionable !== max.transitionable) {\n      streaming.width = {\n        axisId: xScaleID,\n        reverse: min.transitionable\n      };\n    }\n  }\n  if (yScale) {\n    var _min = scaleValue(yScale, yMin, top);\n    var _max = scaleValue(yScale, yMax, bottom);\n    var _reverse = _min.value > _max.value;\n    if (_min.transitionable) {\n      streaming[_reverse ? 'y2' : 'y'] = {\n        axisId: yScaleID\n      };\n    }\n    if (_max.transitionable) {\n      streaming[_reverse ? 'y' : 'y2'] = {\n        axisId: yScaleID\n      };\n    }\n    if (_min.transitionable !== _max.transitionable) {\n      streaming.height = {\n        axisId: yScaleID,\n        reverse: _min.transitionable\n      };\n    }\n  }\n}\nfunction updateLineAnnotation(element, chart, options) {\n  var scales = chart.scales,\n    chartArea = chart.chartArea;\n  var scaleID = options.scaleID,\n    value = options.value;\n  var scale = scales[scaleID];\n  var top = chartArea.top,\n    left = chartArea.left,\n    bottom = chartArea.bottom,\n    right = chartArea.right;\n  var streaming = element.$streaming = {};\n  if (scale) {\n    var isHorizontal = scale.isHorizontal();\n    var pixel = scaleValue(scale, value);\n    if (pixel.transitionable) {\n      streaming[isHorizontal ? 'x' : 'y'] = {\n        axisId: scaleID\n      };\n      streaming[isHorizontal ? 'x2' : 'y2'] = {\n        axisId: scaleID\n      };\n    }\n    return isHorizontal ? {\n      top: top,\n      bottom: bottom\n    } : {\n      left: left,\n      right: right\n    };\n  }\n  var xScaleID = options.xScaleID,\n    yScaleID = options.yScaleID,\n    xMin = options.xMin,\n    xMax = options.xMax,\n    yMin = options.yMin,\n    yMax = options.yMax;\n  var xScale = scales[xScaleID];\n  var yScale = scales[yScaleID];\n  var clip = {};\n  if (xScale) {\n    var min = scaleValue(xScale, xMin);\n    var max = scaleValue(xScale, xMax);\n    if (min.transitionable) {\n      streaming.x = {\n        axisId: xScaleID\n      };\n    } else {\n      clip.left = left;\n    }\n    if (max.transitionable) {\n      streaming.x2 = {\n        axisId: xScaleID\n      };\n    } else {\n      clip.right = right;\n    }\n  }\n  if (yScale) {\n    var _min2 = scaleValue(yScale, yMin);\n    var _max2 = scaleValue(yScale, yMax);\n    if (_min2.transitionable) {\n      streaming.y = {\n        axisId: yScaleID\n      };\n    } else {\n      clip.top = top;\n    }\n    if (_max2.transitionable) {\n      streaming.y2 = {\n        axisId: yScaleID\n      };\n    } else {\n      clip.bottom = bottom;\n    }\n  }\n  return clip;\n}\nfunction updatePointAnnotation(element, chart, options) {\n  var scales = chart.scales;\n  var xScaleID = options.xScaleID,\n    yScaleID = options.yScaleID,\n    xValue = options.xValue,\n    yValue = options.yValue;\n  var xScale = scales[xScaleID];\n  var yScale = scales[yScaleID];\n  var streaming = element.$streaming = {};\n  if (xScale) {\n    var x = scaleValue(xScale, xValue);\n    if (x.transitionable) {\n      streaming.x = {\n        axisId: xScaleID\n      };\n    }\n  }\n  if (yScale) {\n    var y = scaleValue(yScale, yValue);\n    if (y.transitionable) {\n      streaming.y = {\n        axisId: yScaleID\n      };\n    }\n  }\n}\nfunction initAnnotationPlugin() {\n  var BoxAnnotation = registry.getElement('boxAnnotation');\n  var LineAnnotation = registry.getElement('lineAnnotation');\n  var PointAnnotation = registry.getElement('pointAnnotation');\n  var resolveBoxAnnotationProperties = BoxAnnotation.prototype.resolveElementProperties;\n  var resolveLineAnnotationProperties = LineAnnotation.prototype.resolveElementProperties;\n  var resolvePointAnnotationProperties = PointAnnotation.prototype.resolveElementProperties;\n  BoxAnnotation.prototype.resolveElementProperties = function (chart, options) {\n    updateBoxAnnotation(this, chart, options);\n    return resolveBoxAnnotationProperties.call(this, chart, options);\n  };\n  LineAnnotation.prototype.resolveElementProperties = function (chart, options) {\n    var chartArea = chart.chartArea;\n    chart.chartArea = updateLineAnnotation(this, chart, options);\n    var properties = resolveLineAnnotationProperties.call(this, chart, options);\n    chart.chartArea = chartArea;\n    return properties;\n  };\n  PointAnnotation.prototype.resolveElementProperties = function (chart, options) {\n    updatePointAnnotation(this, chart, options);\n    return resolvePointAnnotationProperties.call(this, chart, options);\n  };\n}\nfunction attachChart$1(plugin, chart) {\n  var _this = this;\n  var streaming = chart.$streaming;\n  if (streaming.annotationPlugin !== plugin) {\n    var afterUpdate = plugin.afterUpdate;\n    initAnnotationPlugin();\n    streaming.annotationPlugin = plugin;\n    plugin.afterUpdate = function (_chart, args, options) {\n      var mode = args.mode;\n      var animationOpts = options.animation;\n      if (mode === 'quiet') {\n        options.animation = false;\n      }\n      afterUpdate.call(_this, _chart, args, options);\n      if (mode === 'quiet') {\n        options.animation = animationOpts;\n      }\n    };\n  }\n}\nfunction getElements(chart) {\n  var plugin = chart.$streaming.annotationPlugin;\n  if (plugin) {\n    var state = plugin._getState(chart);\n    return state && state.elements || [];\n  }\n  return [];\n}\nfunction detachChart$1(chart) {\n  delete chart.$streaming.annotationPlugin;\n}\nvar transitionKeys$1 = {\n  x: ['x', 'caretX'],\n  y: ['y', 'caretY']\n};\nfunction update$1() {\n  var _me$constructor$proto;\n  var me = this;\n  var element = me.getActiveElements()[0];\n  if (element) {\n    var meta = me._chart.getDatasetMeta(element.datasetIndex);\n    me.$streaming = getAxisMap(me, transitionKeys$1, meta);\n  } else {\n    me.$streaming = {};\n  }\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  (_me$constructor$proto = me.constructor.prototype.update).call.apply(_me$constructor$proto, [me].concat(args));\n}\nvar chartStates = new WeakMap();\nfunction getState(chart) {\n  var state = chartStates.get(chart);\n  if (!state) {\n    state = {\n      originalScaleOptions: {}\n    };\n    chartStates.set(chart, state);\n  }\n  return state;\n}\nfunction removeState(chart) {\n  chartStates.delete(chart);\n}\nfunction storeOriginalScaleOptions(chart) {\n  var _getState = getState(chart),\n    originalScaleOptions = _getState.originalScaleOptions;\n  var scales = chart.scales;\n  each(scales, function (scale) {\n    var id = scale.id;\n    if (!originalScaleOptions[id]) {\n      originalScaleOptions[id] = {\n        duration: resolveOption(scale, 'duration'),\n        delay: resolveOption(scale, 'delay')\n      };\n    }\n  });\n  each(originalScaleOptions, function (opt, key) {\n    if (!scales[key]) {\n      delete originalScaleOptions[key];\n    }\n  });\n  return originalScaleOptions;\n}\nfunction zoomRealTimeScale(scale, zoom, center, limits) {\n  var chart = scale.chart,\n    axis = scale.axis;\n  var _ref3 = limits && limits[axis] || {},\n    _ref3$minDuration = _ref3.minDuration,\n    minDuration = _ref3$minDuration === void 0 ? 0 : _ref3$minDuration,\n    _ref3$maxDuration = _ref3.maxDuration,\n    maxDuration = _ref3$maxDuration === void 0 ? Infinity : _ref3$maxDuration,\n    _ref3$minDelay = _ref3.minDelay,\n    minDelay = _ref3$minDelay === void 0 ? -Infinity : _ref3$minDelay,\n    _ref3$maxDelay = _ref3.maxDelay,\n    maxDelay = _ref3$maxDelay === void 0 ? Infinity : _ref3$maxDelay;\n  var realtimeOpts = scale.options.realtime;\n  var duration = resolveOption(scale, 'duration');\n  var delay = resolveOption(scale, 'delay');\n  var newDuration = clamp(duration * (2 - zoom), minDuration, maxDuration);\n  var maxPercent, newDelay;\n  storeOriginalScaleOptions(chart);\n  if (scale.isHorizontal()) {\n    maxPercent = (scale.right - center.x) / (scale.right - scale.left);\n  } else {\n    maxPercent = (scale.bottom - center.y) / (scale.bottom - scale.top);\n  }\n  newDelay = delay + maxPercent * (duration - newDuration);\n  realtimeOpts.duration = newDuration;\n  realtimeOpts.delay = clamp(newDelay, minDelay, maxDelay);\n  return newDuration !== scale.max - scale.min;\n}\nfunction panRealTimeScale(scale, delta, limits) {\n  var chart = scale.chart,\n    axis = scale.axis;\n  var _ref4 = limits && limits[axis] || {},\n    _ref4$minDelay = _ref4.minDelay,\n    minDelay = _ref4$minDelay === void 0 ? -Infinity : _ref4$minDelay,\n    _ref4$maxDelay = _ref4.maxDelay,\n    maxDelay = _ref4$maxDelay === void 0 ? Infinity : _ref4$maxDelay;\n  var delay = resolveOption(scale, 'delay');\n  var newDelay = delay + (scale.getValueForPixel(delta) - scale.getValueForPixel(0));\n  storeOriginalScaleOptions(chart);\n  scale.options.realtime.delay = clamp(newDelay, minDelay, maxDelay);\n  return true;\n}\nfunction resetRealTimeScaleOptions(chart) {\n  var originalScaleOptions = storeOriginalScaleOptions(chart);\n  each(chart.scales, function (scale) {\n    var realtimeOptions = scale.options.realtime;\n    if (realtimeOptions) {\n      var original = originalScaleOptions[scale.id];\n      if (original) {\n        realtimeOptions.duration = original.duration;\n        realtimeOptions.delay = original.delay;\n      } else {\n        delete realtimeOptions.duration;\n        delete realtimeOptions.delay;\n      }\n    }\n  });\n}\nfunction initZoomPlugin(plugin) {\n  plugin.zoomFunctions.realtime = zoomRealTimeScale;\n  plugin.panFunctions.realtime = panRealTimeScale;\n}\nfunction attachChart(plugin, chart) {\n  var streaming = chart.$streaming;\n  if (streaming.zoomPlugin !== plugin) {\n    var resetZoom = streaming.resetZoom = chart.resetZoom;\n    initZoomPlugin(plugin);\n    chart.resetZoom = function (transition) {\n      resetRealTimeScaleOptions(chart);\n      resetZoom(transition);\n    };\n    streaming.zoomPlugin = plugin;\n  }\n}\nfunction detachChart(chart) {\n  var streaming = chart.$streaming;\n  if (streaming.zoomPlugin) {\n    chart.resetZoom = streaming.resetZoom;\n    removeState(chart);\n    delete streaming.resetZoom;\n    delete streaming.zoomPlugin;\n  }\n}\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var _INTERVALS$unit = INTERVALS[unit],\n    milliseconds = _INTERVALS$unit.size,\n    steps = _INTERVALS$unit.steps;\n  var factor;\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n  for (var i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n  return factor;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var range = max - min;\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var _INTERVALS$UNITS$i = INTERVALS[UNITS[i]],\n      common = _INTERVALS$UNITS$i.common,\n      size = _INTERVALS$UNITS$i.size,\n      steps = _INTERVALS$UNITS$i.steps;\n    var factor = steps ? steps[steps.length - 1] : Number.MAX_SAFE_INTEGER;\n    if (common && Math.ceil(range / (factor * size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nvar datasetPropertyKeys = ['pointBackgroundColor', 'pointBorderColor', 'pointBorderWidth', 'pointRadius', 'pointRotation', 'pointStyle', 'pointHitRadius', 'pointHoverBackgroundColor', 'pointHoverBorderColor', 'pointHoverBorderWidth', 'pointHoverRadius', 'backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'radius', 'rotation'];\nfunction clean(scale) {\n  var chart = scale.chart,\n    id = scale.id,\n    max = scale.max;\n  var duration = resolveOption(scale, 'duration');\n  var delay = resolveOption(scale, 'delay');\n  var ttl = resolveOption(scale, 'ttl');\n  var pause = resolveOption(scale, 'pause');\n  var min = Date.now() - (isNaN(ttl) ? duration + delay : ttl);\n  var i, start, count, removalRange;\n  each(chart.data.datasets, function (dataset, datasetIndex) {\n    var meta = chart.getDatasetMeta(datasetIndex);\n    var axis = id === meta.xAxisID && 'x' || id === meta.yAxisID && 'y';\n    if (axis) {\n      var controller = meta.controller;\n      var data = dataset.data;\n      var length = data.length;\n      if (pause) {\n        for (i = 0; i < length; ++i) {\n          var point = controller.getParsed(i);\n          if (point && !(point[axis] < max)) {\n            break;\n          }\n        }\n        start = i + 2;\n      } else {\n        start = 0;\n      }\n      for (i = start; i < length; ++i) {\n        var _point = controller.getParsed(i);\n        if (!_point || !(_point[axis] <= min)) {\n          break;\n        }\n      }\n      count = i - start;\n      if (isNaN(ttl)) {\n        count = Math.max(count - 2, 0);\n      }\n      data.splice(start, count);\n      each(datasetPropertyKeys, function (key) {\n        if (isArray(dataset[key])) {\n          dataset[key].splice(start, count);\n        }\n      });\n      each(dataset.datalabels, function (value) {\n        if (isArray(value)) {\n          value.splice(start, count);\n        }\n      });\n      if (typeof data[0] !== 'object') {\n        removalRange = {\n          start: start,\n          count: count\n        };\n      }\n      each(chart._active, function (item, index) {\n        if (item.datasetIndex === datasetIndex && item.index >= start) {\n          if (item.index >= start + count) {\n            item.index -= count;\n          } else {\n            chart._active.splice(index, 1);\n          }\n        }\n      }, null, true);\n    }\n  });\n  if (removalRange) {\n    chart.data.labels.splice(removalRange.start, removalRange.count);\n  }\n}\nfunction transition(element, id, translate) {\n  var animations = element.$animations || {};\n  each(element.$streaming, function (item, key) {\n    if (item.axisId === id) {\n      var delta = item.reverse ? -translate : translate;\n      var animation = animations[key];\n      if (isFinite(element[key])) {\n        element[key] -= delta;\n      }\n      if (animation) {\n        animation._from -= delta;\n        animation._to -= delta;\n      }\n    }\n  });\n}\nfunction scroll(scale) {\n  var chart = scale.chart,\n    id = scale.id,\n    realtime = scale.$realtime;\n  var duration = resolveOption(scale, 'duration');\n  var delay = resolveOption(scale, 'delay');\n  var isHorizontal = scale.isHorizontal();\n  var length = isHorizontal ? scale.width : scale.height;\n  var now = Date.now();\n  var tooltip = chart.tooltip;\n  var annotations = getElements(chart);\n  var offset = length * (now - realtime.head) / duration;\n  if (isHorizontal === !!scale.options.reverse) {\n    offset = -offset;\n  }\n  each(chart.data.datasets, function (dataset, datasetIndex) {\n    var meta = chart.getDatasetMeta(datasetIndex);\n    var _meta$data = meta.data,\n      elements = _meta$data === void 0 ? [] : _meta$data,\n      element = meta.dataset;\n    for (var i = 0, ilen = elements.length; i < ilen; ++i) {\n      transition(elements[i], id, offset);\n    }\n    if (element) {\n      transition(element, id, offset);\n      delete element._path;\n    }\n  });\n  for (var i = 0, ilen = annotations.length; i < ilen; ++i) {\n    transition(annotations[i], id, offset);\n  }\n  if (tooltip) {\n    transition(tooltip, id, offset);\n  }\n  scale.max = now - delay;\n  scale.min = scale.max - duration;\n  realtime.head = now;\n}\nvar RealTimeScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(RealTimeScale, _TimeScale);\n  var _super = _createSuper(RealTimeScale);\n  function RealTimeScale(props) {\n    var _this2;\n    _classCallCheck(this, RealTimeScale);\n    _this2 = _super.call(this, props);\n    _this2.$realtime = _this2.$realtime || {};\n    return _this2;\n  }\n  _createClass(RealTimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var me = this;\n      _get(_getPrototypeOf(RealTimeScale.prototype), \"init\", this).call(this, scaleOpts, opts);\n      startDataRefreshTimer(me.$realtime, function () {\n        var chart = me.chart;\n        var onRefresh = resolveOption(me, 'onRefresh');\n        callback(onRefresh, [chart], me);\n        clean(me);\n        chart.update('quiet');\n        return resolveOption(me, 'refresh');\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var realtime = me.$realtime,\n        options = me.options;\n      var bounds = options.bounds,\n        offset = options.offset,\n        ticksOpts = options.ticks;\n      var autoSkip = ticksOpts.autoSkip,\n        source = ticksOpts.source,\n        majorTicksOpts = ticksOpts.major;\n      var majorEnabled = majorTicksOpts.enabled;\n      if (resolveOption(me, 'pause')) {\n        stopFrameRefreshTimer(realtime);\n      } else {\n        if (!realtime.frameRequestID) {\n          realtime.head = Date.now();\n        }\n        startFrameRefreshTimer(realtime, function () {\n          var chart = me.chart;\n          var streaming = chart.$streaming;\n          scroll(me);\n          if (streaming) {\n            callback(streaming.render, [chart]);\n          }\n          return resolveOption(me, 'frameRate');\n        });\n      }\n      options.bounds = undefined;\n      options.offset = false;\n      ticksOpts.autoSkip = false;\n      ticksOpts.source = source === 'auto' ? '' : source;\n      majorTicksOpts.enabled = true;\n      _get(_getPrototypeOf(RealTimeScale.prototype), \"update\", this).call(this, maxWidth, maxHeight, margins);\n      options.bounds = bounds;\n      options.offset = offset;\n      ticksOpts.autoSkip = autoSkip;\n      ticksOpts.source = source;\n      majorTicksOpts.enabled = majorEnabled;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var duration = resolveOption(me, 'duration');\n      var delay = resolveOption(me, 'delay');\n      var max = me.$realtime.head - delay;\n      var min = max - duration;\n      var maxArray = [1e15, max];\n      var minArray = [-1e15, min];\n      Object.defineProperty(me, 'min', {\n        get: function get() {\n          return minArray.shift();\n        },\n        set: noop\n      });\n      Object.defineProperty(me, 'max', {\n        get: function get() {\n          return maxArray.shift();\n        },\n        set: noop\n      });\n      var ticks = _get(_getPrototypeOf(RealTimeScale.prototype), \"buildTicks\", this).call(this);\n      delete me.min;\n      delete me.max;\n      me.min = min;\n      me.max = max;\n      return ticks;\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var ticksOpts = this.options.ticks;\n      var maxRotation = ticksOpts.maxRotation;\n      ticksOpts.maxRotation = ticksOpts.minRotation || 0;\n      _get(_getPrototypeOf(RealTimeScale.prototype), \"calculateLabelRotation\", this).call(this);\n      ticksOpts.maxRotation = maxRotation;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var options = me.options;\n      _get(_getPrototypeOf(RealTimeScale.prototype), \"fit\", this).call(this);\n      if (options.ticks.display && options.display && me.isHorizontal()) {\n        me.paddingLeft = 3;\n        me.paddingRight = 3;\n        me._handleMargins();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      var me = this;\n      var chart = me.chart,\n        ctx = me.ctx;\n      var area = me.isHorizontal() ? {\n        left: chartArea.left,\n        top: 0,\n        right: chartArea.right,\n        bottom: chart.height\n      } : {\n        left: 0,\n        top: chartArea.top,\n        right: chart.width,\n        bottom: chartArea.bottom\n      };\n      me._gridLineItems = null;\n      me._labelItems = null;\n      clipArea(ctx, area);\n      _get(_getPrototypeOf(RealTimeScale.prototype), \"draw\", this).call(this, chartArea);\n      unclipArea(ctx);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var realtime = this.$realtime;\n      stopFrameRefreshTimer(realtime);\n      stopDataRefreshTimer(realtime);\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var me = this;\n      var adapter = me._adapter;\n      var duration = resolveOption(me, 'duration');\n      var delay = resolveOption(me, 'delay');\n      var refresh = resolveOption(me, 'refresh');\n      var max = me.$realtime.head - delay;\n      var min = max - duration;\n      var capacity = me._getLabelCapacity(min);\n      var _me$options = me.options,\n        timeOpts = _me$options.time,\n        ticksOpts = _me$options.ticks;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n      var major = determineMajorUnit(minor);\n      var stepSize = timeOpts.stepSize || determineStepSize(min, max, minor, capacity);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var majorTicksEnabled = ticksOpts.major.enabled;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var interval = INTERVALS[minor];\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      time = first;\n      if (majorTicksEnabled && major && !hasWeekday && !timeOpts.round) {\n        time = +adapter.startOf(time, major);\n        time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n      }\n      var timestamps = ticksOpts.source === 'data' && me.getDataTimestamps();\n      for (count = 0; time < max + refresh; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max + refresh || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }]);\n  return RealTimeScale;\n}(TimeScale);\nRealTimeScale.id = 'realtime';\nRealTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  realtime: {},\n  ticks: {\n    autoSkip: false,\n    source: 'auto',\n    major: {\n      enabled: true\n    }\n  }\n};\ndefaults.describe('scale.realtime', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'onRefresh';\n  }\n});\nvar version = \"2.0.0\";\ndefaults.set('transitions', {\n  quiet: {\n    animation: {\n      duration: 0\n    }\n  }\n});\nvar transitionKeys = {\n  x: ['x', 'cp1x', 'cp2x'],\n  y: ['y', 'cp1y', 'cp2y']\n};\nfunction update(mode) {\n  var me = this;\n  if (mode === 'quiet') {\n    each(me.data.datasets, function (dataset, datasetIndex) {\n      var controller = me.getDatasetMeta(datasetIndex).controller;\n      controller._setStyle = function (element, index, _mode, active) {\n        DatasetController.prototype._setStyle.call(this, element, index, 'quiet', active);\n      };\n    });\n  }\n  Chart.prototype.update.call(me, mode);\n  if (mode === 'quiet') {\n    each(me.data.datasets, function (dataset, datasetIndex) {\n      delete me.getDatasetMeta(datasetIndex).controller._setStyle;\n    });\n  }\n}\nfunction render(chart) {\n  var streaming = chart.$streaming;\n  chart.render();\n  if (streaming.lastMouseEvent) {\n    setTimeout(function () {\n      var lastMouseEvent = streaming.lastMouseEvent;\n      if (lastMouseEvent) {\n        chart._eventHandler(lastMouseEvent);\n      }\n    }, 0);\n  }\n}\nvar StreamingPlugin = {\n  id: 'streaming',\n  version: version,\n  beforeInit: function beforeInit(chart) {\n    var streaming = chart.$streaming = chart.$streaming || {\n      render: render\n    };\n    var canvas = streaming.canvas = chart.canvas;\n    var mouseEventListener = streaming.mouseEventListener = function (event) {\n      var pos = getRelativePosition(event, chart);\n      streaming.lastMouseEvent = {\n        type: 'mousemove',\n        chart: chart,\n        native: event,\n        x: pos.x,\n        y: pos.y\n      };\n    };\n    canvas.addEventListener('mousedown', mouseEventListener);\n    canvas.addEventListener('mouseup', mouseEventListener);\n  },\n  afterInit: function afterInit(chart) {\n    chart.update = update;\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var _chart$options = chart.options,\n      scales = _chart$options.scales,\n      elements = _chart$options.elements;\n    var tooltip = chart.tooltip;\n    each(scales, function (_ref5) {\n      var type = _ref5.type;\n      if (type === 'realtime') {\n        elements.line.capBezierPoints = false;\n      }\n    });\n    if (tooltip) {\n      tooltip.update = update$1;\n    }\n    try {\n      var plugin = registry.getPlugin('annotation');\n      attachChart$1(plugin, chart);\n    } catch (e) {\n      detachChart$1(chart);\n    }\n    try {\n      var _plugin = registry.getPlugin('zoom');\n      attachChart(_plugin, chart);\n    } catch (e) {\n      detachChart(chart);\n    }\n  },\n  beforeDatasetUpdate: function beforeDatasetUpdate(chart, args) {\n    var meta = args.meta,\n      mode = args.mode;\n    if (mode === 'quiet') {\n      var controller = meta.controller,\n        $animations = meta.$animations;\n      if ($animations && $animations.visible && $animations.visible._active) {\n        controller.updateElement = noop;\n        controller.updateSharedOptions = noop;\n      }\n    }\n  },\n  afterDatasetUpdate: function afterDatasetUpdate(chart, args) {\n    var meta = args.meta,\n      mode = args.mode;\n    var _meta$data2 = meta.data,\n      elements = _meta$data2 === void 0 ? [] : _meta$data2,\n      element = meta.dataset,\n      controller = meta.controller;\n    for (var i = 0, ilen = elements.length; i < ilen; ++i) {\n      elements[i].$streaming = getAxisMap(elements[i], transitionKeys, meta);\n    }\n    if (element) {\n      element.$streaming = getAxisMap(element, transitionKeys, meta);\n    }\n    if (mode === 'quiet') {\n      delete controller.updateElement;\n      delete controller.updateSharedOptions;\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var ctx = chart.ctx,\n      chartArea = chart.chartArea,\n      width = chart.width,\n      height = chart.height;\n    var _args$meta = args.meta,\n      xAxisID = _args$meta.xAxisID,\n      yAxisID = _args$meta.yAxisID,\n      controller = _args$meta.controller;\n    var area = {\n      left: 0,\n      top: 0,\n      right: width,\n      bottom: height\n    };\n    if (xAxisID && controller.getScaleForId(xAxisID) instanceof RealTimeScale) {\n      area.left = chartArea.left;\n      area.right = chartArea.right;\n    }\n    if (yAxisID && controller.getScaleForId(yAxisID) instanceof RealTimeScale) {\n      area.top = chartArea.top;\n      area.bottom = chartArea.bottom;\n    }\n    clipArea(ctx, area);\n  },\n  afterDatasetDraw: function afterDatasetDraw(chart) {\n    unclipArea(chart.ctx);\n  },\n  beforeEvent: function beforeEvent(chart, args) {\n    var streaming = chart.$streaming;\n    var event = args.event;\n    if (event.type === 'mousemove') {\n      streaming.lastMouseEvent = event;\n    } else if (event.type === 'mouseout') {\n      delete streaming.lastMouseEvent;\n    }\n  },\n  destroy: function destroy(chart) {\n    var scales = chart.scales,\n      streaming = chart.$streaming,\n      tooltip = chart.tooltip;\n    var canvas = streaming.canvas,\n      mouseEventListener = streaming.mouseEventListener;\n    delete chart.update;\n    if (tooltip) {\n      delete tooltip.update;\n    }\n    canvas.removeEventListener('mousedown', mouseEventListener);\n    canvas.removeEventListener('mouseup', mouseEventListener);\n    each(scales, function (scale) {\n      if (scale instanceof RealTimeScale) {\n        scale.destroy();\n      }\n    });\n  },\n  defaults: {\n    duration: 10000,\n    delay: 0,\n    frameRate: 30,\n    refresh: 1000,\n    onRefresh: null,\n    pause: false,\n    ttl: undefined\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'onRefresh';\n    }\n  }\n};\nvar registerables = [StreamingPlugin, RealTimeScale];\nexport default registerables;\nexport { RealTimeScale, StreamingPlugin };","map":{"version":3,"names":["registry","TimeScale","defaults","DatasetController","Chart","valueOrDefault","each","requestAnimFrame","callback","noop","isFinite","clipArea","unclipArea","isNumber","_lookup","isArray","getRelativePosition","clamp","value","lower","upper","Math","min","max","resolveOption","scale","key","realtimeOpts","options","realtime","streamingOpts","chart","plugins","streaming","getAxisMap","element","_ref","_ref2","x","y","xAxisID","yAxisID","axisMap","axisId","cancelAnimFrame","window","cancelAnimationFrame","startFrameRefreshTimer","context","func","frameRequestID","refresh","nextRefresh","now","Date","newFrameRate","frameDuration","newNextRefresh","call","stopFrameRefreshTimer","stopDataRefreshTimer","refreshTimerID","clearInterval","refreshInterval","startDataRefreshTimer","interval","setInterval","newInterval","isNaN","scaleValue","fallback","parse","getPixelForValue","transitionable","updateBoxAnnotation","scales","chartArea","xScaleID","yScaleID","xMin","xMax","yMin","yMax","xScale","yScale","top","left","bottom","right","$streaming","reverse","width","height","updateLineAnnotation","scaleID","isHorizontal","pixel","clip","x2","y2","updatePointAnnotation","xValue","yValue","initAnnotationPlugin","BoxAnnotation","getElement","LineAnnotation","PointAnnotation","resolveBoxAnnotationProperties","prototype","resolveElementProperties","resolveLineAnnotationProperties","resolvePointAnnotationProperties","properties","attachChart$1","plugin","_this","annotationPlugin","afterUpdate","_chart","args","mode","animationOpts","animation","getElements","state","_getState","elements","detachChart$1","transitionKeys$1","update$1","_me$constructor$proto","me","getActiveElements","meta","getDatasetMeta","datasetIndex","_len","arguments","length","Array","_key","constructor","update","apply","concat","chartStates","WeakMap","getState","get","originalScaleOptions","set","removeState","delete","storeOriginalScaleOptions","id","duration","delay","opt","zoomRealTimeScale","zoom","center","limits","axis","_ref3","_ref3$minDuration","minDuration","_ref3$maxDuration","maxDuration","Infinity","_ref3$minDelay","minDelay","_ref3$maxDelay","maxDelay","newDuration","maxPercent","newDelay","panRealTimeScale","delta","_ref4","_ref4$minDelay","_ref4$maxDelay","getValueForPixel","resetRealTimeScaleOptions","realtimeOptions","original","initZoomPlugin","zoomFunctions","panFunctions","attachChart","zoomPlugin","resetZoom","transition","detachChart","INTERVALS","millisecond","common","size","steps","second","minute","hour","day","week","month","quarter","year","UNITS","Object","keys","determineStepSize","unit","capacity","range","_INTERVALS$unit","milliseconds","factor","ceil","i","ilen","determineUnitForAutoTicks","minUnit","indexOf","_INTERVALS$UNITS$i","Number","MAX_SAFE_INTEGER","determineMajorUnit","addTick","ticks","time","timestamps","_lookup2","lo","hi","timestamp","datasetPropertyKeys","clean","ttl","pause","start","count","removalRange","data","datasets","dataset","controller","point","getParsed","splice","datalabels","_active","item","index","labels","translate","animations","$animations","_from","_to","scroll","$realtime","tooltip","annotations","offset","head","_meta$data","_path","RealTimeScale","_TimeScale","_inherits","_super","_createSuper","props","_this2","_classCallCheck","_createClass","init","scaleOpts","opts","_get","_getPrototypeOf","onRefresh","maxWidth","maxHeight","margins","bounds","ticksOpts","autoSkip","source","majorTicksOpts","major","majorEnabled","enabled","render","undefined","buildTicks","maxArray","minArray","defineProperty","shift","calculateLabelRotation","maxRotation","minRotation","fit","display","paddingLeft","paddingRight","_handleMargins","draw","ctx","area","_gridLineItems","_labelItems","destroy","_generate","adapter","_adapter","_getLabelCapacity","_me$options","timeOpts","minor","stepSize","weekday","isoWeekday","majorTicksEnabled","hasWeekday","first","startOf","diff","Error","round","add","getDataTimestamps","sort","a","b","map","adapters","parser","displayFormats","describe","_scriptable","name","version","quiet","transitionKeys","_setStyle","_mode","active","lastMouseEvent","setTimeout","_eventHandler","StreamingPlugin","beforeInit","canvas","mouseEventListener","event","pos","type","native","addEventListener","afterInit","beforeUpdate","_chart$options","_ref5","line","capBezierPoints","getPlugin","e","beforeDatasetUpdate","visible","updateElement","updateSharedOptions","afterDatasetUpdate","_meta$data2","beforeDatasetDraw","_args$meta","getScaleForId","afterDatasetDraw","beforeEvent","removeEventListener","frameRate","descriptors","registerables"],"sources":["C:/Users/hp/Downloads/chart-demo/node_modules/chartjs-plugin-streaming/dist/chartjs-plugin-streaming.esm.js"],"sourcesContent":["/*!\n * chartjs-plugin-streaming v2.0.0\n * https://nagix.github.io/chartjs-plugin-streaming\n * (c) 2017-2021 Akihiko Kusanagi\n * Released under the MIT license\n */\nimport { registry, TimeScale, defaults, DatasetController, Chart } from 'chart.js';\nimport { valueOrDefault, each, requestAnimFrame, callback, noop, isFinite, clipArea, unclipArea, isNumber, _lookup, isArray, getRelativePosition } from 'chart.js/helpers';\n\nfunction clamp(value, lower, upper) {\n  return Math.min(Math.max(value, lower), upper);\n}\nfunction resolveOption(scale, key) {\n  const realtimeOpts = scale.options.realtime;\n  const streamingOpts = scale.chart.options.plugins.streaming;\n  return valueOrDefault(realtimeOpts[key], streamingOpts[key]);\n}\nfunction getAxisMap(element, {x, y}, {xAxisID, yAxisID}) {\n  const axisMap = {};\n  each(x, key => {\n    axisMap[key] = {axisId: xAxisID};\n  });\n  each(y, key => {\n    axisMap[key] = {axisId: yAxisID};\n  });\n  return axisMap;\n}\nconst cancelAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return noop;\n  }\n  return window.cancelAnimationFrame;\n}());\nfunction startFrameRefreshTimer(context, func) {\n  if (!context.frameRequestID) {\n    const refresh = () => {\n      const nextRefresh = context.nextRefresh || 0;\n      const now = Date.now();\n      if (nextRefresh <= now) {\n        const newFrameRate = callback(func);\n        const frameDuration = 1000 / (Math.max(newFrameRate, 0) || 30);\n        const newNextRefresh = context.nextRefresh + frameDuration || 0;\n        context.nextRefresh = newNextRefresh > now ? newNextRefresh : now + frameDuration;\n      }\n      context.frameRequestID = requestAnimFrame.call(window, refresh);\n    };\n    context.frameRequestID = requestAnimFrame.call(window, refresh);\n  }\n}\nfunction stopFrameRefreshTimer(context) {\n  const frameRequestID = context.frameRequestID;\n  if (frameRequestID) {\n    cancelAnimFrame.call(window, frameRequestID);\n    delete context.frameRequestID;\n  }\n}\nfunction stopDataRefreshTimer(context) {\n  const refreshTimerID = context.refreshTimerID;\n  if (refreshTimerID) {\n    clearInterval(refreshTimerID);\n    delete context.refreshTimerID;\n    delete context.refreshInterval;\n  }\n}\nfunction startDataRefreshTimer(context, func, interval) {\n  if (!context.refreshTimerID) {\n    context.refreshTimerID = setInterval(() => {\n      const newInterval = callback(func);\n      if (context.refreshInterval !== newInterval && !isNaN(newInterval)) {\n        stopDataRefreshTimer(context);\n        startDataRefreshTimer(context, func, newInterval);\n      }\n    }, interval || 0);\n    context.refreshInterval = interval || 0;\n  }\n}\n\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ?\n    {value: scale.getPixelForValue(value), transitionable: true} :\n    {value: fallback};\n}\nfunction updateBoxAnnotation(element, chart, options) {\n  const {scales, chartArea} = chart;\n  const {xScaleID, yScaleID, xMin, xMax, yMin, yMax} = options;\n  const xScale = scales[xScaleID];\n  const yScale = scales[yScaleID];\n  const {top, left, bottom, right} = chartArea;\n  const streaming = element.$streaming = {};\n  if (xScale) {\n    const min = scaleValue(xScale, xMin, left);\n    const max = scaleValue(xScale, xMax, right);\n    const reverse = min.value > max.value;\n    if (min.transitionable) {\n      streaming[reverse ? 'x2' : 'x'] = {axisId: xScaleID};\n    }\n    if (max.transitionable) {\n      streaming[reverse ? 'x' : 'x2'] = {axisId: xScaleID};\n    }\n    if (min.transitionable !== max.transitionable) {\n      streaming.width = {axisId: xScaleID, reverse: min.transitionable};\n    }\n  }\n  if (yScale) {\n    const min = scaleValue(yScale, yMin, top);\n    const max = scaleValue(yScale, yMax, bottom);\n    const reverse = min.value > max.value;\n    if (min.transitionable) {\n      streaming[reverse ? 'y2' : 'y'] = {axisId: yScaleID};\n    }\n    if (max.transitionable) {\n      streaming[reverse ? 'y' : 'y2'] = {axisId: yScaleID};\n    }\n    if (min.transitionable !== max.transitionable) {\n      streaming.height = {axisId: yScaleID, reverse: min.transitionable};\n    }\n  }\n}\nfunction updateLineAnnotation(element, chart, options) {\n  const {scales, chartArea} = chart;\n  const {scaleID, value} = options;\n  const scale = scales[scaleID];\n  const {top, left, bottom, right} = chartArea;\n  const streaming = element.$streaming = {};\n  if (scale) {\n    const isHorizontal = scale.isHorizontal();\n    const pixel = scaleValue(scale, value);\n    if (pixel.transitionable) {\n      streaming[isHorizontal ? 'x' : 'y'] = {axisId: scaleID};\n      streaming[isHorizontal ? 'x2' : 'y2'] = {axisId: scaleID};\n    }\n    return isHorizontal ? {top, bottom} : {left, right};\n  }\n  const {xScaleID, yScaleID, xMin, xMax, yMin, yMax} = options;\n  const xScale = scales[xScaleID];\n  const yScale = scales[yScaleID];\n  const clip = {};\n  if (xScale) {\n    const min = scaleValue(xScale, xMin);\n    const max = scaleValue(xScale, xMax);\n    if (min.transitionable) {\n      streaming.x = {axisId: xScaleID};\n    } else {\n      clip.left = left;\n    }\n    if (max.transitionable) {\n      streaming.x2 = {axisId: xScaleID};\n    } else {\n      clip.right = right;\n    }\n  }\n  if (yScale) {\n    const min = scaleValue(yScale, yMin);\n    const max = scaleValue(yScale, yMax);\n    if (min.transitionable) {\n      streaming.y = {axisId: yScaleID};\n    } else {\n      clip.top = top;\n    }\n    if (max.transitionable) {\n      streaming.y2 = {axisId: yScaleID};\n    } else {\n      clip.bottom = bottom;\n    }\n  }\n  return clip;\n}\nfunction updatePointAnnotation(element, chart, options) {\n  const scales = chart.scales;\n  const {xScaleID, yScaleID, xValue, yValue} = options;\n  const xScale = scales[xScaleID];\n  const yScale = scales[yScaleID];\n  const streaming = element.$streaming = {};\n  if (xScale) {\n    const x = scaleValue(xScale, xValue);\n    if (x.transitionable) {\n      streaming.x = {axisId: xScaleID};\n    }\n  }\n  if (yScale) {\n    const y = scaleValue(yScale, yValue);\n    if (y.transitionable) {\n      streaming.y = {axisId: yScaleID};\n    }\n  }\n}\nfunction initAnnotationPlugin() {\n  const BoxAnnotation = registry.getElement('boxAnnotation');\n  const LineAnnotation = registry.getElement('lineAnnotation');\n  const PointAnnotation = registry.getElement('pointAnnotation');\n  const resolveBoxAnnotationProperties = BoxAnnotation.prototype.resolveElementProperties;\n  const resolveLineAnnotationProperties = LineAnnotation.prototype.resolveElementProperties;\n  const resolvePointAnnotationProperties = PointAnnotation.prototype.resolveElementProperties;\n  BoxAnnotation.prototype.resolveElementProperties = function(chart, options) {\n    updateBoxAnnotation(this, chart, options);\n    return resolveBoxAnnotationProperties.call(this, chart, options);\n  };\n  LineAnnotation.prototype.resolveElementProperties = function(chart, options) {\n    const chartArea = chart.chartArea;\n    chart.chartArea = updateLineAnnotation(this, chart, options);\n    const properties = resolveLineAnnotationProperties.call(this, chart, options);\n    chart.chartArea = chartArea;\n    return properties;\n  };\n  PointAnnotation.prototype.resolveElementProperties = function(chart, options) {\n    updatePointAnnotation(this, chart, options);\n    return resolvePointAnnotationProperties.call(this, chart, options);\n  };\n}\nfunction attachChart$1(plugin, chart) {\n  const streaming = chart.$streaming;\n  if (streaming.annotationPlugin !== plugin) {\n    const afterUpdate = plugin.afterUpdate;\n    initAnnotationPlugin();\n    streaming.annotationPlugin = plugin;\n    plugin.afterUpdate = (_chart, args, options) => {\n      const mode = args.mode;\n      const animationOpts = options.animation;\n      if (mode === 'quiet') {\n        options.animation = false;\n      }\n      afterUpdate.call(this, _chart, args, options);\n      if (mode === 'quiet') {\n        options.animation = animationOpts;\n      }\n    };\n  }\n}\nfunction getElements(chart) {\n  const plugin = chart.$streaming.annotationPlugin;\n  if (plugin) {\n    const state = plugin._getState(chart);\n    return state && state.elements || [];\n  }\n  return [];\n}\nfunction detachChart$1(chart) {\n  delete chart.$streaming.annotationPlugin;\n}\n\nconst transitionKeys$1 = {x: ['x', 'caretX'], y: ['y', 'caretY']};\nfunction update$1(...args) {\n  const me = this;\n  const element = me.getActiveElements()[0];\n  if (element) {\n    const meta = me._chart.getDatasetMeta(element.datasetIndex);\n    me.$streaming = getAxisMap(me, transitionKeys$1, meta);\n  } else {\n    me.$streaming = {};\n  }\n  me.constructor.prototype.update.call(me, ...args);\n}\n\nconst chartStates = new WeakMap();\nfunction getState(chart) {\n  let state = chartStates.get(chart);\n  if (!state) {\n    state = {originalScaleOptions: {}};\n    chartStates.set(chart, state);\n  }\n  return state;\n}\nfunction removeState(chart) {\n  chartStates.delete(chart);\n}\nfunction storeOriginalScaleOptions(chart) {\n  const {originalScaleOptions} = getState(chart);\n  const scales = chart.scales;\n  each(scales, scale => {\n    const id = scale.id;\n    if (!originalScaleOptions[id]) {\n      originalScaleOptions[id] = {\n        duration: resolveOption(scale, 'duration'),\n        delay: resolveOption(scale, 'delay')\n      };\n    }\n  });\n  each(originalScaleOptions, (opt, key) => {\n    if (!scales[key]) {\n      delete originalScaleOptions[key];\n    }\n  });\n  return originalScaleOptions;\n}\nfunction zoomRealTimeScale(scale, zoom, center, limits) {\n  const {chart, axis} = scale;\n  const {minDuration = 0, maxDuration = Infinity, minDelay = -Infinity, maxDelay = Infinity} = limits && limits[axis] || {};\n  const realtimeOpts = scale.options.realtime;\n  const duration = resolveOption(scale, 'duration');\n  const delay = resolveOption(scale, 'delay');\n  const newDuration = clamp(duration * (2 - zoom), minDuration, maxDuration);\n  let maxPercent, newDelay;\n  storeOriginalScaleOptions(chart);\n  if (scale.isHorizontal()) {\n    maxPercent = (scale.right - center.x) / (scale.right - scale.left);\n  } else {\n    maxPercent = (scale.bottom - center.y) / (scale.bottom - scale.top);\n  }\n  newDelay = delay + maxPercent * (duration - newDuration);\n  realtimeOpts.duration = newDuration;\n  realtimeOpts.delay = clamp(newDelay, minDelay, maxDelay);\n  return newDuration !== scale.max - scale.min;\n}\nfunction panRealTimeScale(scale, delta, limits) {\n  const {chart, axis} = scale;\n  const {minDelay = -Infinity, maxDelay = Infinity} = limits && limits[axis] || {};\n  const delay = resolveOption(scale, 'delay');\n  const newDelay = delay + (scale.getValueForPixel(delta) - scale.getValueForPixel(0));\n  storeOriginalScaleOptions(chart);\n  scale.options.realtime.delay = clamp(newDelay, minDelay, maxDelay);\n  return true;\n}\nfunction resetRealTimeScaleOptions(chart) {\n  const originalScaleOptions = storeOriginalScaleOptions(chart);\n  each(chart.scales, scale => {\n    const realtimeOptions = scale.options.realtime;\n    if (realtimeOptions) {\n      const original = originalScaleOptions[scale.id];\n      if (original) {\n        realtimeOptions.duration = original.duration;\n        realtimeOptions.delay = original.delay;\n      } else {\n        delete realtimeOptions.duration;\n        delete realtimeOptions.delay;\n      }\n    }\n  });\n}\nfunction initZoomPlugin(plugin) {\n  plugin.zoomFunctions.realtime = zoomRealTimeScale;\n  plugin.panFunctions.realtime = panRealTimeScale;\n}\nfunction attachChart(plugin, chart) {\n  const streaming = chart.$streaming;\n  if (streaming.zoomPlugin !== plugin) {\n    const resetZoom = streaming.resetZoom = chart.resetZoom;\n    initZoomPlugin(plugin);\n    chart.resetZoom = transition => {\n      resetRealTimeScaleOptions(chart);\n      resetZoom(transition);\n    };\n    streaming.zoomPlugin = plugin;\n  }\n}\nfunction detachChart(chart) {\n  const streaming = chart.$streaming;\n  if (streaming.zoomPlugin) {\n    chart.resetZoom = streaming.resetZoom;\n    removeState(chart);\n    delete streaming.resetZoom;\n    delete streaming.zoomPlugin;\n  }\n}\n\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction determineStepSize(min, max, unit, capacity) {\n  const range = max - min;\n  const {size: milliseconds, steps} = INTERVALS[unit];\n  let factor;\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n  for (let i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n  return factor;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const range = max - min;\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const {common, size, steps} = INTERVALS[UNITS[i]];\n    const factor = steps ? steps[steps.length - 1] : Number.MAX_SAFE_INTEGER;\n    if (common && Math.ceil(range / (factor * size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nconst datasetPropertyKeys = [\n  'pointBackgroundColor',\n  'pointBorderColor',\n  'pointBorderWidth',\n  'pointRadius',\n  'pointRotation',\n  'pointStyle',\n  'pointHitRadius',\n  'pointHoverBackgroundColor',\n  'pointHoverBorderColor',\n  'pointHoverBorderWidth',\n  'pointHoverRadius',\n  'backgroundColor',\n  'borderColor',\n  'borderSkipped',\n  'borderWidth',\n  'hoverBackgroundColor',\n  'hoverBorderColor',\n  'hoverBorderWidth',\n  'hoverRadius',\n  'hitRadius',\n  'radius',\n  'rotation'\n];\nfunction clean(scale) {\n  const {chart, id, max} = scale;\n  const duration = resolveOption(scale, 'duration');\n  const delay = resolveOption(scale, 'delay');\n  const ttl = resolveOption(scale, 'ttl');\n  const pause = resolveOption(scale, 'pause');\n  const min = Date.now() - (isNaN(ttl) ? duration + delay : ttl);\n  let i, start, count, removalRange;\n  each(chart.data.datasets, (dataset, datasetIndex) => {\n    const meta = chart.getDatasetMeta(datasetIndex);\n    const axis = id === meta.xAxisID && 'x' || id === meta.yAxisID && 'y';\n    if (axis) {\n      const controller = meta.controller;\n      const data = dataset.data;\n      const length = data.length;\n      if (pause) {\n        for (i = 0; i < length; ++i) {\n          const point = controller.getParsed(i);\n          if (point && !(point[axis] < max)) {\n            break;\n          }\n        }\n        start = i + 2;\n      } else {\n        start = 0;\n      }\n      for (i = start; i < length; ++i) {\n        const point = controller.getParsed(i);\n        if (!point || !(point[axis] <= min)) {\n          break;\n        }\n      }\n      count = i - start;\n      if (isNaN(ttl)) {\n        count = Math.max(count - 2, 0);\n      }\n      data.splice(start, count);\n      each(datasetPropertyKeys, key => {\n        if (isArray(dataset[key])) {\n          dataset[key].splice(start, count);\n        }\n      });\n      each(dataset.datalabels, value => {\n        if (isArray(value)) {\n          value.splice(start, count);\n        }\n      });\n      if (typeof data[0] !== 'object') {\n        removalRange = {\n          start: start,\n          count: count\n        };\n      }\n      each(chart._active, (item, index) => {\n        if (item.datasetIndex === datasetIndex && item.index >= start) {\n          if (item.index >= start + count) {\n            item.index -= count;\n          } else {\n            chart._active.splice(index, 1);\n          }\n        }\n      }, null, true);\n    }\n  });\n  if (removalRange) {\n    chart.data.labels.splice(removalRange.start, removalRange.count);\n  }\n}\nfunction transition(element, id, translate) {\n  const animations = element.$animations || {};\n  each(element.$streaming, (item, key) => {\n    if (item.axisId === id) {\n      const delta = item.reverse ? -translate : translate;\n      const animation = animations[key];\n      if (isFinite(element[key])) {\n        element[key] -= delta;\n      }\n      if (animation) {\n        animation._from -= delta;\n        animation._to -= delta;\n      }\n    }\n  });\n}\nfunction scroll(scale) {\n  const {chart, id, $realtime: realtime} = scale;\n  const duration = resolveOption(scale, 'duration');\n  const delay = resolveOption(scale, 'delay');\n  const isHorizontal = scale.isHorizontal();\n  const length = isHorizontal ? scale.width : scale.height;\n  const now = Date.now();\n  const tooltip = chart.tooltip;\n  const annotations = getElements(chart);\n  let offset = length * (now - realtime.head) / duration;\n  if (isHorizontal === !!scale.options.reverse) {\n    offset = -offset;\n  }\n  each(chart.data.datasets, (dataset, datasetIndex) => {\n    const meta = chart.getDatasetMeta(datasetIndex);\n    const {data: elements = [], dataset: element} = meta;\n    for (let i = 0, ilen = elements.length; i < ilen; ++i) {\n      transition(elements[i], id, offset);\n    }\n    if (element) {\n      transition(element, id, offset);\n      delete element._path;\n    }\n  });\n  for (let i = 0, ilen = annotations.length; i < ilen; ++i) {\n    transition(annotations[i], id, offset);\n  }\n  if (tooltip) {\n    transition(tooltip, id, offset);\n  }\n  scale.max = now - delay;\n  scale.min = scale.max - duration;\n  realtime.head = now;\n}\nclass RealTimeScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this.$realtime = this.$realtime || {};\n  }\n  init(scaleOpts, opts) {\n    const me = this;\n    super.init(scaleOpts, opts);\n    startDataRefreshTimer(me.$realtime, () => {\n      const chart = me.chart;\n      const onRefresh = resolveOption(me, 'onRefresh');\n      callback(onRefresh, [chart], me);\n      clean(me);\n      chart.update('quiet');\n      return resolveOption(me, 'refresh');\n    });\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const {$realtime: realtime, options} = me;\n    const {bounds, offset, ticks: ticksOpts} = options;\n    const {autoSkip, source, major: majorTicksOpts} = ticksOpts;\n    const majorEnabled = majorTicksOpts.enabled;\n    if (resolveOption(me, 'pause')) {\n      stopFrameRefreshTimer(realtime);\n    } else {\n      if (!realtime.frameRequestID) {\n        realtime.head = Date.now();\n      }\n      startFrameRefreshTimer(realtime, () => {\n        const chart = me.chart;\n        const streaming = chart.$streaming;\n        scroll(me);\n        if (streaming) {\n          callback(streaming.render, [chart]);\n        }\n        return resolveOption(me, 'frameRate');\n      });\n    }\n    options.bounds = undefined;\n    options.offset = false;\n    ticksOpts.autoSkip = false;\n    ticksOpts.source = source === 'auto' ? '' : source;\n    majorTicksOpts.enabled = true;\n    super.update(maxWidth, maxHeight, margins);\n    options.bounds = bounds;\n    options.offset = offset;\n    ticksOpts.autoSkip = autoSkip;\n    ticksOpts.source = source;\n    majorTicksOpts.enabled = majorEnabled;\n  }\n  buildTicks() {\n    const me = this;\n    const duration = resolveOption(me, 'duration');\n    const delay = resolveOption(me, 'delay');\n    const max = me.$realtime.head - delay;\n    const min = max - duration;\n    const maxArray = [1e15, max];\n    const minArray = [-1e15, min];\n    Object.defineProperty(me, 'min', {\n      get: () => minArray.shift(),\n      set: noop\n    });\n    Object.defineProperty(me, 'max', {\n      get: () => maxArray.shift(),\n      set: noop\n    });\n    const ticks = super.buildTicks();\n    delete me.min;\n    delete me.max;\n    me.min = min;\n    me.max = max;\n    return ticks;\n  }\n  calculateLabelRotation() {\n    const ticksOpts = this.options.ticks;\n    const maxRotation = ticksOpts.maxRotation;\n    ticksOpts.maxRotation = ticksOpts.minRotation || 0;\n    super.calculateLabelRotation();\n    ticksOpts.maxRotation = maxRotation;\n  }\n  fit() {\n    const me = this;\n    const options = me.options;\n    super.fit();\n    if (options.ticks.display && options.display && me.isHorizontal()) {\n      me.paddingLeft = 3;\n      me.paddingRight = 3;\n      me._handleMargins();\n    }\n  }\n  draw(chartArea) {\n    const me = this;\n    const {chart, ctx} = me;\n    const area = me.isHorizontal() ?\n      {\n        left: chartArea.left,\n        top: 0,\n        right: chartArea.right,\n        bottom: chart.height\n      } : {\n        left: 0,\n        top: chartArea.top,\n        right: chart.width,\n        bottom: chartArea.bottom\n      };\n    me._gridLineItems = null;\n    me._labelItems = null;\n    clipArea(ctx, area);\n    super.draw(chartArea);\n    unclipArea(ctx);\n  }\n  destroy() {\n    const realtime = this.$realtime;\n    stopFrameRefreshTimer(realtime);\n    stopDataRefreshTimer(realtime);\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const duration = resolveOption(me, 'duration');\n    const delay = resolveOption(me, 'delay');\n    const refresh = resolveOption(me, 'refresh');\n    const max = me.$realtime.head - delay;\n    const min = max - duration;\n    const capacity = me._getLabelCapacity(min);\n    const {time: timeOpts, ticks: ticksOpts} = me.options;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    const major = determineMajorUnit(minor);\n    const stepSize = timeOpts.stepSize || determineStepSize(min, max, minor, capacity);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const majorTicksEnabled = ticksOpts.major.enabled;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const interval = INTERVALS[minor];\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    time = first;\n    if (majorTicksEnabled && major && !hasWeekday && !timeOpts.round) {\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n    const timestamps = ticksOpts.source === 'data' && me.getDataTimestamps();\n    for (count = 0; time < max + refresh; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max + refresh || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n}\nRealTimeScale.id = 'realtime';\nRealTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  realtime: {},\n  ticks: {\n    autoSkip: false,\n    source: 'auto',\n    major: {\n      enabled: true\n    }\n  }\n};\ndefaults.describe('scale.realtime', {\n  _scriptable: name => name !== 'onRefresh'\n});\n\nvar version = \"2.0.0\";\n\ndefaults.set('transitions', {\n  quiet: {\n    animation: {\n      duration: 0\n    }\n  }\n});\nconst transitionKeys = {x: ['x', 'cp1x', 'cp2x'], y: ['y', 'cp1y', 'cp2y']};\nfunction update(mode) {\n  const me = this;\n  if (mode === 'quiet') {\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      const controller = me.getDatasetMeta(datasetIndex).controller;\n      controller._setStyle = function(element, index, _mode, active) {\n        DatasetController.prototype._setStyle.call(this, element, index, 'quiet', active);\n      };\n    });\n  }\n  Chart.prototype.update.call(me, mode);\n  if (mode === 'quiet') {\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      delete me.getDatasetMeta(datasetIndex).controller._setStyle;\n    });\n  }\n}\nfunction render(chart) {\n  const streaming = chart.$streaming;\n  chart.render();\n  if (streaming.lastMouseEvent) {\n    setTimeout(() => {\n      const lastMouseEvent = streaming.lastMouseEvent;\n      if (lastMouseEvent) {\n        chart._eventHandler(lastMouseEvent);\n      }\n    }, 0);\n  }\n}\nvar StreamingPlugin = {\n  id: 'streaming',\n  version,\n  beforeInit(chart) {\n    const streaming = chart.$streaming = chart.$streaming || {render};\n    const canvas = streaming.canvas = chart.canvas;\n    const mouseEventListener = streaming.mouseEventListener = event => {\n      const pos = getRelativePosition(event, chart);\n      streaming.lastMouseEvent = {\n        type: 'mousemove',\n        chart: chart,\n        native: event,\n        x: pos.x,\n        y: pos.y\n      };\n    };\n    canvas.addEventListener('mousedown', mouseEventListener);\n    canvas.addEventListener('mouseup', mouseEventListener);\n  },\n  afterInit(chart) {\n    chart.update = update;\n  },\n  beforeUpdate(chart) {\n    const {scales, elements} = chart.options;\n    const tooltip = chart.tooltip;\n    each(scales, ({type}) => {\n      if (type === 'realtime') {\n        elements.line.capBezierPoints = false;\n      }\n    });\n    if (tooltip) {\n      tooltip.update = update$1;\n    }\n    try {\n      const plugin = registry.getPlugin('annotation');\n      attachChart$1(plugin, chart);\n    } catch (e) {\n      detachChart$1(chart);\n    }\n    try {\n      const plugin = registry.getPlugin('zoom');\n      attachChart(plugin, chart);\n    } catch (e) {\n      detachChart(chart);\n    }\n  },\n  beforeDatasetUpdate(chart, args) {\n    const {meta, mode} = args;\n    if (mode === 'quiet') {\n      const {controller, $animations} = meta;\n      if ($animations && $animations.visible && $animations.visible._active) {\n        controller.updateElement = noop;\n        controller.updateSharedOptions = noop;\n      }\n    }\n  },\n  afterDatasetUpdate(chart, args) {\n    const {meta, mode} = args;\n    const {data: elements = [], dataset: element, controller} = meta;\n    for (let i = 0, ilen = elements.length; i < ilen; ++i) {\n      elements[i].$streaming = getAxisMap(elements[i], transitionKeys, meta);\n    }\n    if (element) {\n      element.$streaming = getAxisMap(element, transitionKeys, meta);\n    }\n    if (mode === 'quiet') {\n      delete controller.updateElement;\n      delete controller.updateSharedOptions;\n    }\n  },\n  beforeDatasetDraw(chart, args) {\n    const {ctx, chartArea, width, height} = chart;\n    const {xAxisID, yAxisID, controller} = args.meta;\n    const area = {\n      left: 0,\n      top: 0,\n      right: width,\n      bottom: height\n    };\n    if (xAxisID && controller.getScaleForId(xAxisID) instanceof RealTimeScale) {\n      area.left = chartArea.left;\n      area.right = chartArea.right;\n    }\n    if (yAxisID && controller.getScaleForId(yAxisID) instanceof RealTimeScale) {\n      area.top = chartArea.top;\n      area.bottom = chartArea.bottom;\n    }\n    clipArea(ctx, area);\n  },\n  afterDatasetDraw(chart) {\n    unclipArea(chart.ctx);\n  },\n  beforeEvent(chart, args) {\n    const streaming = chart.$streaming;\n    const event = args.event;\n    if (event.type === 'mousemove') {\n      streaming.lastMouseEvent = event;\n    } else if (event.type === 'mouseout') {\n      delete streaming.lastMouseEvent;\n    }\n  },\n  destroy(chart) {\n    const {scales, $streaming: streaming, tooltip} = chart;\n    const {canvas, mouseEventListener} = streaming;\n    delete chart.update;\n    if (tooltip) {\n      delete tooltip.update;\n    }\n    canvas.removeEventListener('mousedown', mouseEventListener);\n    canvas.removeEventListener('mouseup', mouseEventListener);\n    each(scales, scale => {\n      if (scale instanceof RealTimeScale) {\n        scale.destroy();\n      }\n    });\n  },\n  defaults: {\n    duration: 10000,\n    delay: 0,\n    frameRate: 30,\n    refresh: 1000,\n    onRefresh: null,\n    pause: false,\n    ttl: undefined\n  },\n  descriptors: {\n    _scriptable: name => name !== 'onRefresh'\n  }\n};\n\nconst registerables = [StreamingPlugin, RealTimeScale];\n\nexport default registerables;\nexport { RealTimeScale, StreamingPlugin };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}